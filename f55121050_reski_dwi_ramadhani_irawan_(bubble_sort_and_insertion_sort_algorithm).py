# -*- coding: utf-8 -*-
"""F55121050_Reski Dwi Ramadhani Irawan_(Bubble Sort and Insertion Sort Algorithm).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lp4ku71rUNarIjVi_uxTEwAeGey_rcK3
"""

import time

def bubble_sort(arr):
    n = len(arr)
    start_time = time.time()

    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
        # Display the first 5 and last 5 iterations
        if i < 5 or i >= n - 5:
            print_iterations(arr, i + 1, "Bubble Sort")

    end_time = time.time()
    return arr, end_time - start_time


def insertion_sort(arr):
    n = len(arr)
    start_time = time.time()

    for i in range(1, n):
        key = arr[i]
        j = i - 1

        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1

        arr[j + 1] = key
        # Display the first 5 and last 5 iterations
        if i <= 5 or i >= n - 4:
            print_iterations(arr, i, "Insertion Sort")

    end_time = time.time()
    return arr, end_time - start_time

def print_iterations(arr, iteration, sort_name):
    print(f"Iteration {iteration}: {arr}")


def print_before_after(arr, sort_name):
    print(f"\n{sort_name} Before and After:")
    print("Before:", arr)
    sorted_arr = bubble_sort(arr.copy()) if sort_name == "Bubble Sort" else insertion_sort(arr.copy())
    print("After:", sorted_arr)

def print_execution_time(execution_time):
    print("Execution Time:", round(execution_time, 6), "seconds")

def main():
    arr = [12, 99, 62, 15, 20, 95, 39, 48, 3, 24, 8, 43, 74, 19, 97, 33, 49, 68, 55, 33, 90, 90, 7,
           26, 85, 46, 39, 40, 9, 36, 60, 64, 89, 31, 25, 71, 21, 23, 63, 84, 32, 5, 3, 44, 21, 10, 21,
           17, 50, 2, 36, 53, 79, 54, 19, 88, 1, 32, 31, 15, 6, 3, 1, 40, 22, 43, 18, 1, 77, 9, 59,
           40, 7, 41, 81]

    while True:
        print("\nSelect sorting algorithm:")
        print("1. Bubble Sort")
        print("2. Insertion Sort")
        print("3. Exit")
        choice = input("Enter your choice: ")

        if choice == "1":
            sorted_arr, execution_time = bubble_sort(arr.copy())
            print_execution_time(execution_time)
            print_before_after(arr, "Bubble Sort")

        elif choice == "2":
            sorted_arr, execution_time = insertion_sort(arr.copy())
            print_execution_time(execution_time)
            print_before_after(arr, "Insertion Sort")

        elif choice == "3":
            break

        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()